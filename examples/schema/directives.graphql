directive @resolveString(
    val: String!
) on FIELD_DEFINITION | ENUM_VALUE

directive @resolveArg(
    argName: String!
) on FIELD_DEFINITION

directive @deprecated(
    reason: String!
) on FIELD_DEFINITION

directive @_value(
    string: String,
    int: Int,
    bool: Boolean,
) on ENUM_VALUE

#directive @_privacy(
#    backend: Boolean,
#    frontend: Boolean,
#) on ENUM

directive @setContext(
    key: String!
    val: String!
    valType: SetContextValueType! = STRING
) on SCHEMA | FIELD_DEFINITION

enum SetContextValueType @enumPrivacy(backend: true) {
    STRING
    ARG_KEY
    SOURCE_KEY
}

directive @getContext(
    key: String!
) on FIELD_DEFINITION

# hardcoded directive :)
directive @enumPrivacy(
    backend: Boolean,
    frontend: Boolean,
) on ENUM

directive @expect(
    string: String
) on FIELD_DEFINITION
